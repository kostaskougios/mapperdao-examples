package com.rits.dao
import com.googlecode.mapperdao.Entity
import com.googlecode.mapperdao.IntId
import com.rits.model.Category
import com.googlecode.mapperdao.Persisted
import com.googlecode.mapperdao.ValuesMap

/**
 * @author kostantinos.kougios
 *
 * 10 Oct 2011
 */
object Entities {
	object CategoryEntity extends Entity[IntId, Category](classOf[Category]) {
		val id = intAutoGeneratedPK("id", _.id)
		val name = string("name", _.name)
		val category = manyToOne(classOf[Category], _.parent.getOrElse(null))

		def constructor(implicit m: ValuesMap) = {
			val c = m(category) match {
				case cat: Category => Some(cat)
				case null => None
			}
			new Category(name, c) with Persisted with IntId {
				val id: Int = CategoryEntity.id
			}
		}

	}
}