package dellstore.dao

import com.googlecode.mapperdao.Entity
import com.googlecode.mapperdao.IntId
import dellstore.model.Category
import com.googlecode.mapperdao.ValuesMap
import com.googlecode.mapperdao.Persisted
import com.googlecode.mapperdao.utils.CRUD
import com.googlecode.mapperdao.MapperDao
import com.googlecode.mapperdao.utils.All
import com.googlecode.mapperdao.QueryDao
import com.googlecode.mapperdao.utils.TransactionalCRUD

/**
 * dao for the Category class
 *
 * @author kostantinos.kougios
 *
 * 30 Aug 2011
 */
abstract class CategoryDao extends TransactionalCRUD[IntId, Category, Int] with All[IntId, Category] {
	import CategoryDao._
	val entity = CategoryEntity
}

object CategoryDao {
	object CategoryEntity extends Entity[IntId, Category]("Categories", classOf[Category]) {
		val id = intAutoGeneratedPK("category", _.id)
		val name = string("categoryname", _.name)

		val constructor = (m: ValuesMap) => new Category(m(name)) with Persisted with IntId {
			val valuesMap = m
			val id = m(CategoryEntity.id)
		}
	}

}