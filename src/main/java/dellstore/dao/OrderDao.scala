package dellstore.dao
import com.rits.orm.MapperDao
import com.rits.orm.QueryDao
import com.rits.orm.utils.IntIdCRUD
import com.rits.orm.utils.IntIdAll
import dellstore.model.Order
import com.rits.orm.Entity
import com.rits.orm.IntId
import dellstore.model.Customer
import com.rits.orm.Persisted
import com.rits.orm.ValuesMap

/**
 * @author kostantinos.kougios
 *
 * 1 Sep 2011
 */
class OrderDao(val mapperDao: MapperDao, val queryDao: QueryDao) extends IntIdCRUD[Order] with IntIdAll[Order] {
	import OrderDao._
	val entity = OrderEntity
}

object OrderDao {
	object OrderEntity extends Entity[IntId, Order]("orders", classOf[Order]) {
		val orderid = autoGeneratedPK("orderid", _.id)
		val date = datetime("orderdate", _.date)
		val customer = manyToOne("customerid", classOf[Customer], _.customer)
		val netAmount = bigDecimal("netamount", _.netAmount)
		val tax = bigDecimal("tax", _.tax)
		val totalAmount = bigDecimal("totalamount", _.totalAmount)

		val constructor = (m: ValuesMap) => new Order(m(date), m(customer), m.bigDecimal(netAmount), m.bigDecimal(tax), m.bigDecimal(totalAmount)) with Persisted with IntId {
			val valuesMap = m
			val id = m(orderid)
		}
	}
}